$date
  Wed Oct 18 12:55:48 2023
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$var reg 1 ! shift_lsl $end
$var reg 1 " shift_lsr $end
$var reg 1 # shift_asr $end
$var reg 1 $ shift_ror $end
$var reg 1 % shift_rrx $end
$var reg 5 & shift_val[4:0] $end
$var reg 32 ' din[31:0] $end
$var reg 1 ( cin $end
$var reg 32 ) dout[31:0] $end
$var reg 1 * cout $end
$var reg 1 + vdd $end
$var reg 1 , vss $end
$scope module shifter $end
$var reg 1 - shift_lsl $end
$var reg 1 . shift_lsr $end
$var reg 1 / shift_asr $end
$var reg 1 0 shift_ror $end
$var reg 1 1 shift_rrx $end
$var reg 5 2 shift_val[4:0] $end
$var reg 32 3 din[31:0] $end
$var reg 1 4 cin $end
$var reg 32 5 dout[31:0] $end
$var reg 1 6 cout $end
$var reg 1 7 vdd $end
$var reg 1 8 vss $end
$upscope $end
$enddefinitions $end
#0
1!
0"
0#
0$
0%
b00001 &
b10001000100010001000100010001000 '
0(
b00000000000000000000000000000001 )
U*
0+
0,
1-
0.
0/
00
01
b00001 2
b10001000100010001000100010001000 3
04
b00000000000000000000000000000001 5
U6
07
08
#500000000
b00000 &
b00000 2
